# AI Mentor - Bazel Build Configuration for Runpod
# This builds a custom Docker image with all AI Mentor dependencies

load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

# Base image - use Runpod's PyTorch base
BASE_IMAGE = "runpod/pytorch:1.0.2-cu1281-torch280-ubuntu2404"

# Package all AI Mentor files into a tar
pkg_tar(
    name = "ai_mentor_files",
    srcs = glob([
        "backend/**/*",
        "frontend/**/*",
        "*.sh",
        "*.md",
        "docker-compose.yml",
    ], exclude = [
        "**/__pycache__/**",
        "**/node_modules/**",
        "**/.git/**",
        "**/venv/**",
        "**/*.pyc",
        "models/**",
        "volumes/**",
        "course_materials/**/*.pdf",
    ]),
    package_dir = "/workspace/AIMentorProject",
    mode = "0755",
)

# Create directories tar
pkg_tar(
    name = "directories",
    empty_dirs = [
        "/workspace/models",
        "/workspace/AIMentorProject/volumes/etcd",
        "/workspace/AIMentorProject/volumes/minio",
        "/workspace/AIMentorProject/volumes/milvus",
        "/workspace/AIMentorProject/course_materials",
        "/workspace/AIMentorProject/backend/logs",
    ],
    mode = "0755",
)

# System dependencies installation script
pkg_tar(
    name = "install_deps_script",
    srcs = ["install_deps.sh"],
    package_dir = "/tmp",
    mode = "0755",
)

# Build the OCI image
oci_image(
    name = "ai_mentor_image",
    base = "@" + BASE_IMAGE.replace(":", "_").replace("/", "_"),
    tars = [
        ":directories",
        ":ai_mentor_files",
        ":install_deps_script",
    ],
    entrypoint = ["/bin/bash"],
    exposed_ports = [
        "8000/tcp",  # FastAPI Backend
        "8080/tcp",  # LLM Server
        "19530/tcp", # Milvus gRPC
        "9091/tcp",  # Milvus HTTP
        "5173/tcp",  # Frontend
    ],
    env = {
        "PYTHONUNBUFFERED": "1",
        "WORKSPACE": "/workspace/AIMentorProject",
    },
    workdir = "/workspace/AIMentorProject",
)

# Push to Docker Hub
oci_push(
    name = "push_ai_mentor",
    image = ":ai_mentor_image",
    repository = "index.docker.io/mrizvi96/ai-mentor",
    remote_tags = ["latest"],
)
